;; This file was generated by wasmate.py, which is a script that converts
;; from the "flat" text assembly syntax emitted by LLVM into the s-expression
;; syntax expected by the spec repository.
;;
;; Note: this is a hack. A real toolchain will eventually be needed.
;;

(module
  (export "eq_i32" $eq_i32)
  (func $eq_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.eq (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "ne_i32" $ne_i32)
  (func $ne_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.ne (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "slt_i32" $slt_i32)
  (func $slt_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.lt_s (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "sle_i32" $sle_i32)
  (func $sle_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.le_s (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "ult_i32" $ult_i32)
  (func $ult_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.lt_u (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "ule_i32" $ule_i32)
  (func $ule_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.le_u (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "sgt_i32" $sgt_i32)
  (func $sgt_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.gt_s (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "sge_i32" $sge_i32)
  (func $sge_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.ge_s (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "ugt_i32" $ugt_i32)
  (func $ugt_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.gt_u (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (export "uge_i32" $uge_i32)
  (func $uge_i32
    (param i32)
    (param i32)
    (result i32)
    (local i32 i32 i32)
    (set_local 2 (get_local 1))
    (set_local 3 (get_local 0))
    (set_local 4 (i32.ge_u (get_local 3) (get_local 2)))
    (return (get_local 4))
  )
  (memory 0 0
    (segment 0
      ""
    )
  )
)
